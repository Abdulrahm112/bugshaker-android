buildscript {
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.5'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.12.1"
}

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

// Shared project metadata

ext {
    bugShakerVersion = "0.5.2-local"
    bugShakerWebsiteUrl = 'https://github.com/stkent/bugshaker-android'
    bugShakerVcsUrl = 'https://github.com/stkent/bugshaker-android.git'
    bugShakerGroupId = 'com.github.stkent'
    bugShakerArtifactId = 'bugshaker'
    bugShakerDescription = "Send Android bug reports via email. Shake to summon!"
}

license {
    header = file('../Apache2License.txt')
    strictCheck true
}

configurations {
    javadocDeps
}

// If this is skipped, the upload to Bintray will succeed but the version in filenames will be
// 'unspecified'.
version = bugShakerVersion

// If this is skipped, the upload to Bintray will succeed but the reported group id will be
// the root project name (in this case, BugShaker) rather than the group id specified
// in the install or bintray configuration closures.
group = bugShakerGroupId

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName bugShakerVersion
    }

    lintOptions {
        abortOnError true
    }
}

dependencies {
    javadocDeps 'com.android.support:support-annotations:23.1.1'
    javadocDeps 'com.android.support:support-v4:23.1.1'
    javadocDeps 'com.squareup:seismic:1.0.2'

    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.squareup:seismic:1.0.2'
}

install {
    repositories.mavenInstaller {
        pom.project {
            groupId bugShakerGroupId
            artifactId bugShakerArtifactId
            version bugShakerVersion
            packaging 'aar'

            // This does not seem to delegate to project.name as I expected it would.
            name bugShakerArtifactId
            description bugShakerDescription
            inceptionYear '2016'
            url bugShakerWebsiteUrl

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }

            developers {
                developer {
                    id 'stkent'
                    name 'Stuart Kent'
                    email 'skent.dev@gmail.com'
                }
            }

            scm {
                connection bugShakerVcsUrl
                url bugShakerWebsiteUrl
            }
        }
    }
}

ext {
    // command-line deployment
    bintrayUserParameterName = 'bintrayUser'
    bintrayKeyParameterName = 'bintrayKey'

    // CI deployment
    bintrayUserEnvVarName = 'BINTRAY_USER'
    bintrayKeyEnvVarName = 'BINTRAY_KEY'
}

bintray {
    user = project.hasProperty(bintrayUserParameterName) ?
            project.property(bintrayUserParameterName) : System.getenv(bintrayUserEnvVarName)

    key = project.hasProperty(bintrayKeyParameterName) ?
            project.property(bintrayKeyParameterName) : System.getenv(bintrayKeyEnvVarName)

    dryRun = false
    publish = false

    configurations = ['archives']

    pkg {
        repo = 'android-libraries'
        name = bugShakerArtifactId
        desc = bugShakerDescription
        licenses = ['Apache-2.0']
        vcsUrl = bugShakerVcsUrl
        websiteUrl = bugShakerWebsiteUrl
        issueTrackerUrl = 'https://github.com/stkent/bugshaker-android/issues'
        labels = ['android', 'bug reporting', 'screenshot', 'email']
        publicDownloadNumbers = true

        version {
            name = bugShakerVersion
            desc = bugShakerDescription
            // todo: set this up later for pulling release notes from github
            // vcsTag = bugShakerVersion
            released = new Date()
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += configurations.javadocDeps
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.getDestinationDir()
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
